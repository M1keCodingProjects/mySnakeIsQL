How the grammar syntax works:
RuleName : Rule
FinalRule :: combination of RegExp, Literals or DirectTokens
? = 0 or 1 times
() = group
| = either option
+ = 1 or more
* = 0 or more
--------------------------------
Query : Select From Where? ";"?
Select : "SELECT" AttrList
AttrList : Attr ("," Attr)*
Attr :: "*" | IDENT
From : "FROM" Table (("," Table) | Join)*
Table :: IDENT
Join : "INNER"? "JOIN" Table "ON" Predicate
Where : "WHERE" Predicate
Predicate : (Attr CompareOp Value) | BetweenExpr
CompareOp : "==" | "!=" | "<>" | "<" | ">" | ">=" | "<="
Value : Literal
Literal :: INT_LITERAL | STR_LITERAL | DATE_LITERAL
BetweenExpr : "BETWEEN" Value "AND" Value